# --- Stage 1: Build ---
FROM golang:1.24-alpine AS builder

# Устанавливаем зависимости для CGO и SQLite
RUN apk add --no-cache gcc musl-dev sqlite-dev

WORKDIR /app

# Копируем go.mod и go.sum
COPY go.mod go.sum ./
RUN go mod download

# Копируем исходники
COPY . .

# Собираем бинарник с поддержкой CGO для SQLite
RUN CGO_ENABLED=1 GOOS=linux go build -o server ./cmd/server

# --- Stage 2: Minimal image ---
FROM alpine:latest

# Устанавливаем ca-certificates и sqlite для runtime
RUN apk --no-cache add ca-certificates sqlite

WORKDIR /app

# Создаем директорию для базы данных
RUN mkdir -p /app/data

# Копируем бинарник из builder
COPY --from=builder /app/server .

# Копируем миграции/статические файлы, если есть
# COPY migrations ./migrations
# COPY static ./static

EXPOSE 8080

CMD ["./server"]
